{"version":3,"sources":["../src/notificationbadge.js"],"names":["define","$","Ajax","Config","ModalFactory","Swal","ModalNotificationBadge","NotificationBadge","checkIfHasNotification","prototype","request","call","methodname","args","done","result","status","create","type","TYPE","templateContext","badgename","badgeimage","courseid","profileurl","wwwroot","then","modal","show","bind","fail","error","message","showToast","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title"],"mappings":"AAQAA,OAAM,qCAAC,CACH,QADG,CAEH,WAFG,CAGH,aAHG,CAIH,oBAJG,CAKH,4BALG,CAMH,yCANG,CAAD,CAOF,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAA0BC,CAA1B,CAAwCC,CAAxC,CAA8CC,CAA9C,CAAsE,CAEtE,GAAIC,CAAAA,CAAiB,CAAG,UAAW,CAC/B,KAAKC,sBAAL,EACH,CAFD,CAIAD,CAAiB,CAACE,SAAlB,CAA4BD,sBAA5B,CAAqD,UAAW,CAC5D,GAAIE,CAAAA,CAAO,CAAGR,CAAI,CAACS,IAAL,CAAU,CAAC,CACrBC,UAAU,CAAE,wCADS,CAErBC,IAAI,CAAE,EAFe,CAAD,CAAV,CAAd,CAKAH,CAAO,CAAC,CAAD,CAAP,CAAWI,IAAX,CAAgB,SAASC,CAAT,CAAiB,CAC7B,GAAI,IAAAA,CAAM,CAACC,MAAX,CAA2B,CACvBZ,CAAY,CAACa,MAAb,CAAoB,CAChBC,IAAI,CAAEZ,CAAsB,CAACa,IADb,CAEhBC,eAAe,CAAE,CACbC,SAAS,CAAEN,CAAM,CAACM,SADL,CAEbC,UAAU,CAAEP,CAAM,CAACO,UAFN,CAGbC,QAAQ,CAAER,CAAM,CAACQ,QAHJ,CAIbC,UAAU,CAAErB,CAAM,CAACsB,OAAP,CAAiB,kCAAjB,CAAsDV,CAAM,CAACQ,QAJ5D,CAFD,CAApB,EAQGG,IARH,CAQQ,SAASC,CAAT,CAAgB,CACpB,MAAOA,CAAAA,CAAK,CAACC,IAAN,EACV,CAVD,CAWH,CACJ,CAde,CAcdC,IAdc,CAcT,IAdS,CAAhB,EAccC,IAdd,CAcmB,SAASC,CAAT,CAAgB,CAC/B,GAAIC,CAAAA,CAAO,CAAGD,CAAK,CAACC,OAApB,CAEA,GAAI,CAACA,CAAL,CAAc,CACVA,CAAO,CAAGD,CAAK,CAACA,KACnB,CACD,KAAKE,SAAL,CAAe,OAAf,CAAwBD,CAAxB,CACH,CAPkB,CAOjBH,IAPiB,CAOZ,IAPY,CAdnB,CAsBH,CA5BD,CA8BAtB,CAAiB,CAACE,SAAlB,CAA4BwB,SAA5B,CAAwC,SAASf,CAAT,CAAec,CAAf,CAAwB,CAC5D,GAAIE,CAAAA,CAAK,CAAG7B,CAAI,CAAC8B,KAAL,CAAW,CACnBC,KAAK,GADc,CAEnBC,QAAQ,CAAE,SAFS,CAGnBC,iBAAiB,GAHE,CAInBC,KAAK,CAAE,GAJY,CAKnBC,gBAAgB,GALG,CAMnBC,MAAM,CAAE,gBAACL,CAAD,CAAW,CACfA,CAAK,CAACM,gBAAN,CAAuB,YAAvB,CAAqCrC,CAAI,CAACsC,SAA1C,EACAP,CAAK,CAACM,gBAAN,CAAuB,YAAvB,CAAqCrC,CAAI,CAACuC,WAA1C,CACH,CATkB,CAAX,CAAZ,CAYAV,CAAK,CAACW,IAAN,CAAW,CACPC,IAAI,CAAE5B,CADC,CAEP6B,KAAK,CAAEf,CAFA,CAAX,CAIH,CAjBD,CAmBA,MAAO,CACH,KAAQ,eAAW,CACf,MAAO,IAAIzB,CAAAA,CACd,CAHE,CAKV,CAnEK,CAAN","sourcesContent":["/**\n * Delete badge js logic.\n *\n * @package    local_evokegame\n * @copyright  2021 World Bank Group <https://worldbank.org>\n * @author     Willian Mano <willianmanoaraujo@gmail.com>\n */\n\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/config',\n    'core/modal_factory',\n    'local_evokegame/sweetalert',\n    'local_evokegame/modal_notificationbadge'],\n    function($, Ajax, Config, ModalFactory, Swal, ModalNotificationBadge) {\n\n    var NotificationBadge = function() {\n        this.checkIfHasNotification();\n    };\n\n    NotificationBadge.prototype.checkIfHasNotification = function() {\n        var request = Ajax.call([{\n            methodname: 'local_evokegame_checknotificationbadge',\n            args: {}\n        }]);\n\n        request[0].done(function(result) {\n            if (result.status == true) {\n                ModalFactory.create({\n                    type: ModalNotificationBadge.TYPE,\n                    templateContext: {\n                        badgename: result.badgename,\n                        badgeimage: result.badgeimage,\n                        courseid: result.courseid,\n                        profileurl: Config.wwwroot + '/local/evokegame/profile.php?id=' + result.courseid\n                    }\n                }).then(function(modal) {\n                    return modal.show();\n                });\n            }\n        }.bind(this)).fail(function(error) {\n            var message = error.message;\n\n            if (!message) {\n                message = error.error;\n            }\n            this.showToast('error', message);\n        }.bind(this));\n    };\n\n    NotificationBadge.prototype.showToast = function(type, message) {\n        var Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 8000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n        });\n\n        Toast.fire({\n            icon: type,\n            title: message\n        });\n    };\n\n    return {\n        'init': function() {\n            return new NotificationBadge();\n        }\n    };\n});"],"file":"notificationbadge.min.js"}